- implement await/resume

- start to implement interpreter for CacheIR
  - (X) u64 array for "registers" / operandIDs
  - (X) tail (post-IC-return) dispatch and fallback dispatch based on
    "IC kind" state
  - use *only* icVals; don't use the rooted storage in `state` unless
    we go to the fallback. (Avoid some data movement and the barriers
    too.)
  - make ICs a separate call, and integrate tails into main interp body
  - thread the interp dispatch (computed-goto-table)
  - use raw value writes; ensure no barriers occur on stack
  - optimize CacheIR fetch further?
